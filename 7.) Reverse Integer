>>Given a 32-bit signed integer, reverse digits of an integer.

>>Note:
Assume we are dealing with an environment which could only store integers within the 32-bit signed integer range: [−231,  231 − 1].
For the purpose of this problem, assume that your function returns 0 when the reversed integer overflows.


>>
class Solution {
public:
    int reverse(int x) {
       if(x>=INT_MAX-1 || x<=INT_MIN) return 0;
       int arr[50],count=0,sum=0,j=0,signx=1,signs=1;
        if(x<0){signx=-1;}
        for(int i=0;x!=0;i++){
            arr[i]=x%10;
            x/=10;
            count++;
        }
        for(int i=count-1;i>=0;i--){
            sum+=arr[j]*pow(10,i);
            if(sum>=INT_MAX||sum<=INT_MIN)return 0;
            j++;
        }
        cout<<sum;
        if(sum<0){signs=-1;}
        if(signx==signs){
    return sum;
        }else {return 0;}
        }
        
};
