>>Given n non-negative integers a1, a2, ..., an , where each represents a point at coordinate (i, ai). 
n vertical lines are drawn such that the two endpoints of line i is at (i, ai) and (i, 0). 
Find two lines, which together with x-axis forms a container, such that the container contains the most water.

Note: You may not slant the container and n is at least 2.

Example :

Input: [1,8,6,2,5,4,8,3,7]
Output: 49

Solution:

O(n)       --two pointers approach

class Solution {
public:
    int maxArea(vector<int>& height) {
        int tempVol=0,tmp1,tmp2;
        int maxVolume=0;
        int P1=0,P2=height.size()-1;
        while(P2>P1){
            tempVol=(P2-P1)*min(height[P1],height[P2]);
            if(maxVolume<tempVol){maxVolume=tempVol;tmp1=P1;tmp2=P2;}
        if(height[P1]>height[P2]) P2--;
            else P1++;
        }
       // cout<<maxVolume<< " "<<tmp1<<" "<<tmp2;
        return maxVolume;
    }
};